#+TITLE: Email Setup

I am using 3 pieces of software together for reading email inside Emacs.

* What to Install

#+begin_src sh
  apt-get install isync msmtp notmuch
#+end_src

* Getting the Mail: =mbsync=

=mbsync= is a simple package which syncs an IMAP store with a local maildir store. The configuration
file is inside this directory and it is pretty generic. It needs a password, which is stored inside
=pass=, a GPG based secure password storage mechanism.

You have to manually create the directory where mail will be stored.

-----

This is an optional part of the mbsync configuration on a Macbook. The package =isync= might need to
be built locally in order to work around some bugs that occur when the =isync= package provided
through Homebrew is used.

#+begin_src sh
  TLSType IMAPS
  PassCmd "/usr/bin/pass show gmail"

  # $ openssl s_client -connect imap.gmail.com:993 -showcerts 2>&1 < /dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | head -n 40 > ~/gmail.crt
  # For some reason, the server's certificate is required (?) I don't know
  # what will happen when the certificate changes due to expiry etc on Gmail's
  # side
  # CertificateFile "~/gmail.crt"

  # https://sourceforge.net/p/isync/bugs/52/
  # Without this, the error seen on Mac OS is "Error: SASL(-7): invalid parameter supplied: Parameter Error in /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/passwordserver_saslplugins/passwordserver_saslplugins-194/plain_clienttoken.c near line 195""
  # AuthMech PLAIN
  # Authenticate PLAIN

  # isync has started using openssl@3 as a dependency. This causes a bug which is fixed on the
  # isync master branch, but not released as a tag yet.
#+end_src

* Sending Mail: =msmtp=

=msmtp= is simpler than =mbsync= and sends any message that is piped to it. It has a very short
configuration and it can also be configured with only a single password, which has the permission to
send email using an SMTP server.

I have sample configurations for Fastmail and Gmail. In general, any e-mail provider which supports
sending e-mail using SMTP can be used.

#+begin_src sh
  # Gmail
  account        gmail
  host           smtp.gmail.com
  port           587
  from           example@gmail.com
  user           example@gmail.com
  passwordeval   "/usr/bin/pass show gmail"
#+end_src

#+begin_src sh
  account fastmail
  host smtp.fastmail.com
  port 587
  user example@fastmail.com
  passwordeval /usr/bin/pass show fastmail

  # This might be required when using SMTP over TLS
  tls_trust_file /etc/ssl/certs/ca-certificates.crt

  # This sets the envelope-from address
  from example@fastmail.com
#+end_src

* Reading Mail: =notmuch=

=notmuch= is a thin wrapper around the Xapian library, a full text search library written in C. The
configuration file for notmuch is long. However, it was generated using the =notmuch init= command
and I have not made any changes to it. By running the =bootstrap-dotfiles.sh= script, the
=notmuch-config= file will be put in the appropriate location, and you can start using =notmuch=
immediately.

Inside =notmuch-config=, the =database.path= variable might need to be set to the proper value for
every computer. This contains the path to the directory that stores all the e-mail files.
